     
    

module top #(parameter S = 3, W = 7)(
    input logic [W:0] a, b,
    input logic cin,
    output logic [W:0] sum,
    output logic cout
);

    logic [W:S] c;
    logic stop_flag;

   
    always_comb begin
      stop_flag = 1'b0;
        for (int i = S; i <= W; i = i + 1) begin
            if (i == S)
                {c[i], sum[i]} = a[i] + b[i] + cin; 
            else if (i == W)
                {cout, sum[i]} = a[i] + b[i] + c[i-1];
            else
                {c[i], sum[i]} = a[i] + b[i] + c[i-1]; 
        end

        for (int j = S - 1; j >= 0; j = j - 1) begin
            if (stop_flag) begin
                sum[j] = 1'b1;
            end 
            else begin
                sum[j] = a[j] ^ b[j]; // XOR operation
                if (a[j] & b[j]) begin
                    stop_flag = 1;
                end
            end
        end
    end

endmodule
  
